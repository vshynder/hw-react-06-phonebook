{"version":3,"sources":["components/Filter.js","components/ContactForm.js","components/ContactList.js","components/Alert.js","App.js","actions.js","reducers/contactReducer.js","reducers/index.js","reducers/filterReducer.js","reducers/mountedReducer.js","reducers/alertShownReducer.js","reducers/alertMessageReducer.js","index.js"],"names":["Filter","props","className","id","onChange","filterChange","value","filterVal","ContactForm","state","name","number","handleChange","e","setState","target","handleSubmit","preventDefault","formSubmit","onSubmit","this","type","React","Component","ContactListItem","contactId","remove","onClick","ContactList","useEffect","localStorage","setItem","JSON","stringify","contacts","TransitionGroup","component","filter","map","contact","CSSTransition","key","timeout","classNames","toLowerCase","includes","Alert","isShown","info","in","style","display","App","trim","find","handleAlert","onFormSubmit","message","handleAlertChange","handleAlertVisibility","setTimeout","toggleMounted","isMounted","mountOnEnter","length","handleFilter","removeContact","isAlertShown","alertMessage","connect","dispatch","data","shortid","generate","actions","loadFromLS","ls","getItem","console","log","parse","initialState","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f4a65ba.chunk.js","sourcesContent":["import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst Filter = (props) => {\n  return (\n    <div className=\"filter\">\n      <p className=\"filter__title\">Find contacts by name</p>\n      <input\n        className=\"filter__input\"\n        id=\"filter\"\n        onChange={props.filterChange}\n        value={props.filterVal}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filterChange: PropTypes.func,\n  filterVal: PropTypes.string,\n};\n\nexport default Filter;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.formSubmit(this.state);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label className=\"form__name\">\n          Name\n          <input\n            className=\"form__name--input\"\n            id=\"name\"\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.name}\n          />\n        </label>\n        <label className=\"form__number\">\n          Number\n          <input\n            className=\"form__number--input\"\n            id=\"number\"\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.number}\n          />\n        </label>\n        <button className=\"form__submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  formSubmit: PropTypes.func,\n};\n","import React, { useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport PropTypes from \"prop-types\";\n\nconst LS_KEY = \"react-hw-3\";\n\nconst ContactList = (props) => {\n  useEffect(() => {\n    localStorage.setItem(LS_KEY, JSON.stringify(props.contacts));\n  }, [props.contacts]);\n\n  return (\n    <TransitionGroup component=\"ul\" className=\"contact-list\">\n      {props.filter === \"\"\n        ? props.contacts.map((contact) => (\n            <CSSTransition\n              key={contact.id}\n              timeout={250}\n              classNames=\"contact-list__item\"\n            >\n              <ContactListItem\n                contactId={contact.id}\n                name={contact.name}\n                number={contact.number}\n                remove={props.remove}\n              />\n            </CSSTransition>\n          ))\n        : props.contacts\n            .filter((contact) =>\n              contact.name.toLowerCase().includes(props.filter.toLowerCase())\n            )\n            .map((contact) => (\n              <CSSTransition\n                key={contact.id}\n                timeout={250}\n                classNames=\"contact-list__item\"\n              >\n                <ContactListItem\n                  key={contact.id}\n                  contactId={contact.id}\n                  name={contact.name}\n                  number={contact.number}\n                  remove={props.remove}\n                />\n              </CSSTransition>\n            ))}\n    </TransitionGroup>\n  );\n};\n\nconst ContactListItem = ({ contactId, name, number, remove }) => (\n  <li className=\"contact-list__item\">\n    <div className=\"contact-list__item--cont\">\n      <span className=\"contact-list__item--span\">{name}</span>\n      <span className=\"contact-list__item--span\">{number}</span>\n    </div>\n\n    <button\n      className=\"contact-list__remove\"\n      onClick={() => {\n        remove(contactId);\n      }}\n    >\n      {/* <div className=\"contact-list__x-left\"></div>\n      <div className=\"contact-list__x-right\"></div> */}\n    </button>\n  </li>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  remove: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { CSSTransition } from \"react-transition-group\";\n\nconst Alert = ({ isShown, info }) => (\n  <CSSTransition\n    timeout={250}\n    classNames=\"alert\"\n    in={isShown}\n    style={{ display: isShown ? \"block\" : \"none\" }}\n  >\n    <div className=\"alert\">{info}</div>\n  </CSSTransition>\n);\n\nexport default Alert;\n\nAlert.propTypes = {\n  isShown: PropTypes.bool,\n  info: PropTypes.string,\n};\n","import React from \"react\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Alert from \"./components/Alert\";\nimport \"./app.scss\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions\";\n\nimport { CSSTransition } from \"react-transition-group\";\n\nclass App extends React.Component {\n  handleSubmit = ({ name, number }) => {\n    if (name.trim() === \"\" || number.trim() === \"\") {\n      this.handleAlert(\"Name and number must be provided.\");\n      return;\n    }\n    const check = this.props.contacts.find((contact) => contact.name === name);\n    check\n      ? this.handleAlert(\"You already have \" + name)\n      : this.props.onFormSubmit(name, number);\n  };\n\n  handleAlert(message) {\n    this.props.handleAlertChange(message);\n    this.props.handleAlertVisibility(true);\n    setTimeout(() => {\n      this.props.handleAlertVisibility(false);\n    }, 3000);\n  }\n\n  componentDidMount() {\n    this.props.toggleMounted(true);\n  }\n\n  render() {\n    return (\n      <div className=\"phonebook\">\n        <CSSTransition\n          in={this.props.isMounted}\n          timeout={500}\n          classNames=\"title\"\n          mountOnEnter\n        >\n          <h2 className=\"title\">Phonebook</h2>\n        </CSSTransition>\n        <ContactForm formSubmit={this.handleSubmit} />\n        {this.props.contacts.length > 1 ? (\n          <Filter\n            filterChange={this.props.handleFilter}\n            filterVal={this.props.filter}\n          />\n        ) : null}\n\n        <ContactList\n          filter={this.props.filter}\n          contacts={this.props.contacts}\n          remove={this.props.removeContact}\n        />\n        <Alert\n          isShown={this.props.isAlertShown}\n          info={this.props.alertMessage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isMounted: state.isMounted,\n  contacts: state.contacts,\n  filter: state.filter,\n  isAlertShown: state.isAlertShown,\n  alertMessage: state.alertMessage,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFormSubmit: (name, number) =>\n      dispatch(actions.addContact({ name, number })),\n    removeContact: (id) => dispatch(actions.removeContact(id)),\n    toggleMounted: (value) => dispatch(actions.toggleMounted(value)),\n    handleFilter: (e) => dispatch(actions.filter(e.target.value)),\n    handleAlertChange: (message) =>\n      dispatch(actions.toggleAlertMessage(message)),\n    handleAlertVisibility: (value) =>\n      dispatch(actions.toggleAlertVisibility(value)),\n    loadFromLS: (key) => dispatch(actions.loadFromLS(key)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import shortid from \"shortid\";\n\nexport const loadFromLS = (key) => {\n  const ls = localStorage.getItem(key);\n  console.log(ls);\n  const contacts = JSON.parse(ls);\n  console.log(contacts);\n  return {\n    type: \"ADD_FORM_LS\",\n    data: contacts ? contacts : null,\n  };\n};\n\nexport const addContact = ({ name, number }) => ({\n  type: \"ADD_CONTACT\",\n  data: { name, number, id: shortid.generate() },\n});\n\nexport const removeContact = (id) => ({\n  type: \"REMOVE_CONTACT\",\n  data: { id },\n});\n\nexport const filter = (value) => ({\n  type: \"FILTER\",\n  value,\n});\n\nexport const toggleMounted = (value) => ({ type: \"TOGGLE_MOUNTED\", value });\nexport const toggleAlertVisibility = (value) => ({\n  type: \"TOGGLE_ALERT_VISIBILITY\",\n  value,\n});\n\nexport const toggleAlertMessage = (value) => ({\n  type: \"TOGGLE_ALERT_MESSAGE\",\n  value,\n});\n","const LS_KEY = \"react-hw-3\";\n\nconst initialState = JSON.parse(localStorage.getItem(LS_KEY));\n\nexport const contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_CONTACT\":\n      return [\n        ...state,\n        {\n          name: action.data.name,\n          number: action.data.number,\n          id: action.data.id,\n        },\n      ];\n    case \"REMOVE_CONTACT\":\n      return state.filter((contact) => contact.id !== action.data.id);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport { contactReducer } from \"./contactReducer\";\nimport { filterReducer } from \"./filterReducer\";\nimport { mountedReducer } from \"./mountedReducer\";\nimport { alertShownReducer } from \"./alertShownReducer\";\nimport { alertMessageReducer } from \"./alertMessageReducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n  isMounted: mountedReducer,\n  isAlertShown: alertShownReducer,\n  alertMessage: alertMessageReducer,\n});\n\nexport default rootReducer;\n","export const filterReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"FILTER\":\n      return action.value;\n    default:\n      return state;\n  }\n};\n","export const mountedReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"TOGGLE_MOUNTED\":\n      return action.value;\n    default:\n      return state;\n  }\n};\n","export const alertShownReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"TOGGLE_ALERT_VISIBILITY\":\n      return !state;\n    default:\n      return state;\n  }\n};\n","export const alertMessageReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"TOGGLE_ALERT_MESSAGE\":\n      return action.value;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}